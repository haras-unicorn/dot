diff --git a/internal/database/migrations.go b/internal/database/migrations.go
index a4b06058..f835859d 100644
--- a/internal/database/migrations.go
+++ b/internal/database/migrations.go
@@ -273,2 +273,8 @@ var migrations = []func(tx *sql.Tx) error{
 			ALTER TABLE entries ADD COLUMN document_vectors tsvector;
+		`
+		_, err = tx.Exec(sql)
+		return err
+	},
+	func(tx *sql.Tx) (err error) {
+		sql := `
 			UPDATE entries SET document_vectors = to_tsvector(substring(title || ' ' || coalesce(content, '') for 1000000));
@@ -317,2 +323,8 @@ var migrations = []func(tx *sql.Tx) error{
 			ALTER TABLE entries ADD COLUMN changed_at timestamp with time zone;
+		`
+		_, err = tx.Exec(sql)
+		return err
+	},
+	func(tx *sql.Tx) (err error) {
+		sql := `
 			UPDATE entries SET changed_at = published_at;
@@ -342,2 +354,8 @@ var migrations = []func(tx *sql.Tx) error{
 			ALTER TABLE entries ADD COLUMN share_code text not null default '';
+		`
+		_, err = tx.Exec(sql)
+		return err
+	},
+	func(tx *sql.Tx) (err error) {
+		sql := `
 			CREATE UNIQUE INDEX entries_share_code_idx ON entries USING btree(share_code) WHERE share_code <> '';
@@ -355,2 +373,8 @@ var migrations = []func(tx *sql.Tx) error{
 			ALTER TABLE feeds ADD COLUMN next_check_at timestamp with time zone default now();
+		`
+		_, err = tx.Exec(sql)
+		return err
+	},
+	func(tx *sql.Tx) (err error) {
+		sql := `
 			CREATE INDEX entries_user_feed_idx ON entries (user_id, feed_id);
@@ -422,2 +446,8 @@ var migrations = []func(tx *sql.Tx) error{
 			ALTER TABLE entries ADD COLUMN created_at timestamp with time zone not null default now();
+		`
+		_, err = tx.Exec(sql)
+		return err
+	},
+	func(tx *sql.Tx) (err error) {
+		sql := `
 			UPDATE entries SET created_at = published_at;
@@ -470,2 +500,8 @@ var migrations = []func(tx *sql.Tx) error{
 			CREATE TYPE webapp_display_mode AS enum('fullscreen', 'standalone', 'minimal-ui', 'browser');
+		`
+		_, err = tx.Exec(sql)
+		return err
+	},
+	func(tx *sql.Tx) (err error) {
+		sql := `
 			ALTER TABLE users ADD COLUMN display_mode webapp_display_mode default 'standalone';
@@ -505,2 +541,8 @@ var migrations = []func(tx *sql.Tx) error{
 			CREATE TYPE entry_sorting_order AS enum('published_at', 'created_at');
+		`
+		_, err = tx.Exec(sql)
+		return err
+	},
+	func(tx *sql.Tx) (err error) {
+		sql := `
 			ALTER TABLE users ADD COLUMN entry_order entry_sorting_order default 'published_at';
@@ -984,2 +1026,8 @@ var migrations = []func(tx *sql.Tx) error{
 			ALTER TABLE icons ADD COLUMN external_id text default '';
+		`
+		_, err = tx.Exec(sql)
+		return err
+	},
+	func(tx *sql.Tx) (err error) {
+		sql := `
 			CREATE UNIQUE INDEX icons_external_id_idx ON icons USING btree(external_id) WHERE external_id <> '';
