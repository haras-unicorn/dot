#!/usr/bin/env bash
set -eo pipefail

SECRETS="$1"
if [[ ! -d "$SECRETS" ]]; then
  printf "Please enter a secrets directory\n"
  exit 1
fi

HOST="$2"
if [[ "$HOST" == "" ]]; then
  printf "Please enter a valid host\n"
  exit 1
fi

if [[ "$3" == "" ]]; then
  NAME="$2"
  COMMENT="$2"
else
  NAME="$2-$3"
  COMMENT="$2@$3"
  HOST="$3"
fi

mkdir -p "$SECRETS"
ID="$(openssl rand -hex 16)"
NOW="$(date --utc -Iseconds)"
ID_SECRETS="$SECRETS/ssh/$NOW-$ID"
if [[ -d "$ID_SECRETS" ]]; then
  printf "Ssh secrets already exist! Please try again..."
  exit 1
fi
mkdir -p "$ID_SECRETS"

HOST_SECRETS="$SECRETS/$HOST"
mkdir -p "$HOST_SECRETS"
printf "%s" "$ID" >"$HOST_SECRETS/ssh.id"

mkhost() {
  local name

  name="$1"

  if [[ -f "$HOST_SECRETS/$name" ]]; then
    return
  fi

  cp "$ID_SECRETS/$name" "$HOST_SECRETS/$name"
}

mkssh() {
  local name
  local comment

  if [[ "$2" == "" ]]; then
    name="$1"

    ssh-keygen -q -a 100 -t ed25519 -N "" \
      -f "$ID_SECRETS/$name.ssh"
  else
    name="$1"
    comment="$2"

    ssh-keygen -q -a 100 -t ed25519 -N "" \
      -C "$comment" \
      -f "$ID_SECRETS/$name.ssh"
  fi

  chmod 400 "$ID_SECRETS/$name.ssh"
}

mkssh "$NAME" "$COMMENT"
mkhost "$NAME.ssh"
mkhost "$NAME.ssh.pub"
